<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Voice to Code</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f0f2f5;
      color: #333;
      text-align: center;
      margin: 0;
      padding: 40px;
    }

    h1 {
      color: #4A90E2;
    }

    button {
      padding: 12px 24px;
      font-size: 18px;
      background-color: #4A90E2;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 20px;
    }

    button:hover {
      background-color: #357ABD;
    }

    #status {
      margin-top: 15px;
      font-style: italic;
      color: #888;
    }

    #code-display {
      white-space: pre-wrap;
      background-color: #1e1e2e;
      color: #f5f5f5;
      padding: 20px;
      border-radius: 10px;
      width: 80%;
      margin: 30px auto;
      text-align: left;
      font-family: Consolas, monospace;
      font-size: 16px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
      min-height: 200px;
    }

    #back-button {
      position: absolute;
      top: 20px;
      left: 20px;
      background-color: #ddd;
      color: #333;
      padding: 8px 16px;
      border-radius: 5px;
      text-decoration: none;
      font-weight: bold;
    }

    #back-button:hover {
      background-color: #ccc;
    }
  </style>
</head>
<body>
  <a id="back-button" href="/index">‚¨Ö Back to Editor</a>
  <h1>üéôÔ∏è Voice to Code</h1>
  <button onclick="startRecording()">Start Talking</button>
  <div id="status">Press the button to begin voice transcription...</div>
  <div id="code-display">Code will appear here...</div>

  <script>
    async function startRecording() {
      const display = document.getElementById('code-display');
      const status = document.getElementById('status');
      display.innerText = '';
      status.innerText = 'Listening and transcribing...';

      try {
        const response = await fetch('/start-voice', { method: 'POST' });

        if (!response.ok || !response.body) {
          throw new Error('Failed to start voice transcription');
        }

        const reader = response.body.getReader();
        const decoder = new TextDecoder();

        while (true) {
          const { value, done } = await reader.read();
          if (done) break;
          const chunk = decoder.decode(value, { stream: true });
          display.innerText += chunk;
        }

        status.innerText = '‚úÖ Transcription complete!';
      } catch (error) {
        status.innerText = '‚ùå Error: ' + error.message;
      }
    }
  </script>
</body>
</html>


